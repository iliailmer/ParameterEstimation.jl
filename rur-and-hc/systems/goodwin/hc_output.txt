julia> ParameterEstimation.MODEL[] = "goodwin"; ParameterEstimation.OUTPUT_DIR[] = "case_by_case/goodwin"; include("case_by_case/goodwin/goodwin.jl")
[ Info: Preproccessing `ModelingToolkit.ODESystem` object
[ Info: Solving the problem
[ Info: Constructing the maximal system
[ Info: Truncating
[ Info: Assessing local identifiability
[ Info: Found Pivots: [k3_0]
[ Info: Locally identifiable parameters: [k1, k2, k4, k6, Ki, x3, x1]
[ Info: Not identifiable parameters:     [k3, k5, x2]
[ Info: Randomizing
[ Info: transcendence substitutions = Nemo.QQFieldElem[3869549432583]
[ Info: Gröbner basis computation
[ Info: System with 24 equations and 24 indeterminates
[ Info: Remainder computation
[ Info: === Summary ===
[ Info: Globally identifiable parameters:                 [k1, x3, k2, x1]
[ Info: Locally but not globally identifiable parameters: [k6, k4, Ki]
[ Info: Not identifiable parameters:                      [k3, k5, x2]
[ Info: ===============
┌ Info: 
│   full_result["full_polynomial_system"] =
│    24-element Vector{Nemo.QQMPolyRingElem}:
│     -x1_0 + y1_0
│     x3_0^10*x1_0*k2_0 + x3_0^10*x1_1 + x1_0*k2_0*Ki_0^10 + x1_1*Ki_0^10 - k1_0*Ki_0^10
│     -x3_0 + y2_0
│     x3_0*k6_0 - x2_0*k5_0 + x3_1
│     -x1_1 + y1_1
│     x3_0^10*x1_1*k2_0 + x3_0^10*x1_2 + 10*x3_0^9*x1_0*x3_1*k2_0 + 10*x3_0^9*x3_1*x1_1 + x1_1*k2_0*Ki_0^10 + x1_2*Ki_0^10
│     -x3_1 + y2_1
│     x3_1*k6_0 - x2_1*k5_0 + x3_2
│     x2_0*k4_0 - 3869549432583*x1_0 + x2_1
│     -x1_2 + y1_2
│     x3_0^10*x1_2*k2_0 + x3_0^10*x1_3 + 10*x3_0^9*x1_0*x3_2*k2_0 + 20*x3_0^9*x3_1*x1_1*k2_0 + 20*x3_0^9*x3_1*x1_2 + 10*x3_0^9*x1_1*x3_2 + 90*x3_0^8*x1_0*x3_1^2*k2_0 + 90*x3_0^8*x3_1^2*x1_1 + x1_2*k2_0*Ki_0^10 + x1_3*Ki_0^10
│     -x3_2 + y2_2
│     x3_2*k6_0 - x2_2*k5_0 + x3_3
│     x2_1*k4_0 - 3869549432583*x1_1 + x2_2
│     -x1_3 + y1_3
│     x3_0^10*x1_3*k2_0 + x3_0^10*x1_4 + 10*x3_0^9*x1_0*x3_3*k2_0 + 30*x3_0^9*x3_1*x1_2*k2_0 + 30*x3_0^9*x3_1*x1_3 + 30*x3_0^9*x1_1*x3_2*k2_0 + 10*x3_0^9*x1_1*x3_3 + 30*x3_0^9*x3_2*x1_2 + 270*x3_0^8*x1_0*x3_1*x3_2*k2_0 + 270*x3_0^8*x3_1^2*x1_1*k2_0 + 270*x3_0^8*x3_1^2*x1_2 + 270*x3_0^8*x3_1*x1_1*x3_2 + 720*x3_0^7*x1_0*x3_1^3*k2_0 + 720*x3_0^7*x3_1^3*x1_1 + x1_3*k2_0*Ki_0^10 + x1_4*Ki_0^10
│     -x3_3 + y2_3
│     x3_3*k6_0 - x2_3*k5_0 + x3_4
│     x2_2*k4_0 - 3869549432583*x1_2 + x2_3
│     -x3_4 + y2_4
│     x3_4*k6_0 - x2_4*k5_0 + x3_5
│     x2_3*k4_0 - 3869549432583*x1_3 + x2_4
│     -x1_4 + y1_4
└     -x3_5 + y2_5
[ Info: Estimating via the interpolators: ["AAA"]
┌ Info: 
│   y_derivs_vals =
│    Dict{HomotopyContinuation.ModelKit.Expression, Float64} with 1 entry:
└      y1_10 => -4.38764
┌ Info: 
│   y_derivs_vals =
│    Dict{HomotopyContinuation.ModelKit.Expression, Float64} with 1 entry:
└      y1_2 => 0.00094671
┌ Info: 
│   y_derivs_vals =
│    Dict{HomotopyContinuation.ModelKit.Expression, Float64} with 1 entry:
└      y1_4 => 1.84447e-5
┌ Info: 
│   y_derivs_vals =
│    Dict{HomotopyContinuation.ModelKit.Expression, Float64} with 1 entry:
└      y1_1 => -0.00941594
┌ Info: 
│   y_derivs_vals =
│    Dict{HomotopyContinuation.ModelKit.Expression, Float64} with 1 entry:
└      y1_6 => -2.85388e-5
┌ Info: 
│   y_derivs_vals =
│    Dict{HomotopyContinuation.ModelKit.Expression, Float64} with 1 entry:
└      y1_8 => 0.0010712
┌ Info: 
│   y_derivs_vals =
│    Dict{HomotopyContinuation.ModelKit.Expression, Float64} with 1 entry:
└      y1_0 => 0.095272
┌ Info: 
│   y_derivs_vals =
│    Dict{HomotopyContinuation.ModelKit.Expression, Float64} with 1 entry:
└      y1_11 => -1123.24
┌ Info: 
│   y_derivs_vals =
│    Dict{HomotopyContinuation.ModelKit.Expression, Float64} with 1 entry:
└      y1_3 => -0.000126958
┌ Info: 
│   y_derivs_vals =
│    Dict{HomotopyContinuation.ModelKit.Expression, Float64} with 1 entry:
└      y1_5 => 2.8953e-5
┌ Info: 
│   y_derivs_vals =
│    Dict{HomotopyContinuation.ModelKit.Expression, Float64} with 1 entry:
└      y1_9 => 0.0
┌ Info: 
│   y_derivs_vals =
│    Dict{HomotopyContinuation.ModelKit.Expression, Float64} with 1 entry:
└      y1_7 => -4.60282e-5
┌ Info: 
│   y_derivs_vals =
│    Dict{HomotopyContinuation.ModelKit.Expression, Float64} with 1 entry:
└      y2_10 => -9.53893
┌ Info: 
│   y_derivs_vals =
│    Dict{HomotopyContinuation.ModelKit.Expression, Float64} with 1 entry:
└      y2_2 => 0.0727058
┌ Info: 
│   y_derivs_vals =
│    Dict{HomotopyContinuation.ModelKit.Expression, Float64} with 1 entry:
└      y2_5 => -0.00088617
┌ Info: 
│   y_derivs_vals =
│    Dict{HomotopyContinuation.ModelKit.Expression, Float64} with 1 entry:
└      y2_1 => -0.0114292
┌ Info: 
│   y_derivs_vals =
│    Dict{HomotopyContinuation.ModelKit.Expression, Float64} with 1 entry:
└      y2_4 => 0.00498822
┌ Info: 
│   y_derivs_vals =
│    Dict{HomotopyContinuation.ModelKit.Expression, Float64} with 1 entry:
└      y2_7 => -1.81941e-5
┌ Info: 
│   y_derivs_vals =
│    Dict{HomotopyContinuation.ModelKit.Expression, Float64} with 1 entry:
└      y2_0 => 2.4852
┌ Info: 
│   y_derivs_vals =
│    Dict{HomotopyContinuation.ModelKit.Expression, Float64} with 1 entry:
└      y2_11 => 1220.98
┌ Info: 
│   y_derivs_vals =
│    Dict{HomotopyContinuation.ModelKit.Expression, Float64} with 1 entry:
└      y2_6 => 0.000145837
┌ Info: 
│   y_derivs_vals =
│    Dict{HomotopyContinuation.ModelKit.Expression, Float64} with 1 entry:
└      y2_8 => 0.00116442
┌ Info: 
│   y_derivs_vals =
│    Dict{HomotopyContinuation.ModelKit.Expression, Float64} with 1 entry:
└      y2_9 => 0.223569
┌ Info: 
│   y_derivs_vals =
│    Dict{HomotopyContinuation.ModelKit.Expression, Float64} with 1 entry:
└      y2_3 => -0.0238428
┌ Info: 
│   interpolants =
│    Dict{Any, ParameterEstimation.Interpolant} with 2 entries:
│      x1(t) => Interpolant(AAADapprox{AAAapprox{Vector{Float64}}}(AAAapprox{Vector{Float64}}([0.0, 1.0, 0.204082, 0.571429, …
└      x3(t) => Interpolant(AAADapprox{AAAapprox{Vector{Float64}}}(AAAapprox{Vector{Float64}}([0.0, 0.653061, 1.0, 0.387755, …
[ Info: Solving via homotopy
[ Info: Hello
[ Info: Computing gb modulo Prime field of characteristic 1073741827
  0.378285 seconds (440.55 k allocations: 32.924 MiB, 9.84% gc time, 99.54% compilation time)
┌ Info: 
│   length(gb) = 22
└   length(quotient_basis(gb)) = 40
  2.361352 seconds (4.46 M allocations: 265.625 MiB, 91.09% compilation time)
┌ Info: 
└   length(all_solutions) = 0
Final Results:
Any[]

julia> p_true
7-element Vector{Float64}:
 1.0
 0.1
 1.0
 0.1
 1.0
 0.1
 1.0

julia> parameters
7-element Vector{Num}:
 k1
 k2
 k3
 k4
 k5
 k6
 Ki
