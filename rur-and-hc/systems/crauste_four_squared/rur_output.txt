julia> include("parameter_estimation_systems/case_by_case/crauste_four_squared/sys_crauste_four_squared_AAA_abstract_algebra.txt");

julia> 

julia> sys = map(f -> map_coefficients(c -> rationalize(BigInt, round(BigFloat(c), digits=3)), f), sys)
43-element Vector{AbstractAlgebra.Generic.MPoly{Rational{BigInt}}}:
 -E_0 + 619//1000
 E_0^2*mu_EE_0^2 - E_0*P_0*rho_E_0^2 - N_0*P_0*delta_NE_0 + E_0*delta_EL_0 + E_1
 -N_0 + 9//20
 N_0*P_0*delta_NE_0^2 + N_0*mu_N_0^2 + N_1
 -P_0 + 299//500
 E_0*P_0*mu_PE_0 + P_0*S_0*mu_PL_0 - P_0^2*rho_P_0 + P_0*mu_P_0 + P_1
 -M_0 - S_0 + 1309//1000
 -S_0*delta_LM_0 + M_0*mu_M_0 + M_1
 E_0*S_0*mu_LE_0 + S_0^2*mu_LL_0 - S_0*delta_EL_0 + S_0*delta_LM_0 + S_1
 -E_1 - 697//1000
 2*E_0*E_1*mu_EE_0^2 - E_1*P_0*rho_E_0^2 - E_0*P_1*rho_E_0^2 - N_1*P_0*delta_NE_0 - N_0*P_1*delta_NE_0 + E_1*delta_EL_0 + E_2
 -N_1 - 719//1000
 N_1*P_0*delta_NE_0^2 + N_0*P_1*delta_NE_0^2 + N_1*mu_N_0^2 + N_2
 -P_1 - 633//1000
 E_1*P_0*mu_PE_0 + E_0*P_1*mu_PE_0 + P_1*S_0*mu_PL_0 + P_0*S_1*mu_PL_0 - 2*P_0*P_1*rho_P_0 + P_1*mu_P_0 + P_2
 -M_1 - S_1 - 519//500
 E_1*S_0*mu_LE_0 + E_0*S_1*mu_LE_0 + 2*S_0*S_1*mu_LL_0 - S_1*delta_EL_0 + S_1*delta_LM_0 + S_2
 -S_1*delta_LM_0 + M_1*mu_M_0 + M_2
 -E_2 + 98//125
 2*E_1^2*mu_EE_0^2 + 2*E_0*E_2*mu_EE_0^2 - E_2*P_0*rho_E_0^2 - 2*E_1*P_1*rho_E_0^2 - E_0*P_2*rho_E_0^2 - N_2*P_0*delta_NE_0 - 2*N_1*P_1*delta_NE_0 - N_0*P_2*delta_NE_0 + E_2*delta_EL_0 + E_3
 -N_2 + 1433//1000
 N_2*P_0*delta_NE_0^2 + 2*N_1*P_1*delta_NE_0^2 + N_0*P_2*delta_NE_0^2 + N_2*mu_N_0^2 + N_3
 -P_2 + 193//250
 E_2*P_0*mu_PE_0 + 2*E_1*P_1*mu_PE_0 + E_0*P_2*mu_PE_0 + P_2*S_0*mu_PL_0 + 2*P_1*S_1*mu_PL_0 + P_0*S_2*mu_PL_0 - 2*P_1^2*rho_P_0 - 2*P_0*P_2*rho_P_0 + P_2*mu_P_0 + P_3
 -M_2 - S_2 + 166//125
 E_2*S_0*mu_LE_0 + 2*E_1*S_1*mu_LE_0 + E_0*S_2*mu_LE_0 + 2*S_1^2*mu_LL_0 + 2*S_0*S_2*mu_LL_0 - S_2*delta_EL_0 + S_2*delta_LM_0 + S_3
 -S_2*delta_LM_0 + M_2*mu_M_0 + M_3
 -E_3 - 47//100
 6*E_1*E_2*mu_EE_0^2 + 2*E_0*E_3*mu_EE_0^2 - E_3*P_0*rho_E_0^2 - 3*E_2*P_1*rho_E_0^2 - 3*E_1*P_2*rho_E_0^2 - E_0*P_3*rho_E_0^2 - N_3*P_0*delta_NE_0 - 3*N_2*P_1*delta_NE_0 - 3*N_1*P_2*delta_NE_0 - N_0*P_3*delta_NE_0 + E_3*delta_EL_0 + E_4
 -P_3 - 1553//1000
 E_3*P_0*mu_PE_0 + 3*E_2*P_1*mu_PE_0 + 3*E_1*P_2*mu_PE_0 + E_0*P_3*mu_PE_0 + P_3*S_0*mu_PL_0 + 3*P_2*S_1*mu_PL_0 + 3*P_1*S_2*mu_PL_0 + P_0*S_3*mu_PL_0 - 6*P_1*P_2*rho_P_0 - 2*P_0*P_3*rho_P_0 + P_3*mu_P_0 + P_4
 -M_3 - S_3 - 1573//500
 E_3*S_0*mu_LE_0 + 3*E_2*S_1*mu_LE_0 + 3*E_1*S_2*mu_LE_0 + E_0*S_3*mu_LE_0 + 6*S_1*S_2*mu_LL_0 + 2*S_0*S_3*mu_LL_0 - S_3*delta_EL_0 + S_3*delta_LM_0 + S_4
 -S_3*delta_LM_0 + M_3*mu_M_0 + M_4
 -P_4 + 686//125
 E_4*P_0*mu_PE_0 + 4*E_3*P_1*mu_PE_0 + 6*E_2*P_2*mu_PE_0 + 4*E_1*P_3*mu_PE_0 + E_0*P_4*mu_PE_0 + P_4*S_0*mu_PL_0 + 4*P_3*S_1*mu_PL_0 + 6*P_2*S_2*mu_PL_0 + 4*P_1*S_3*mu_PL_0 + P_0*S_4*mu_PL_0 - 6*P_2^2*rho_P_0 - 8*P_1*P_3*rho_P_0 - 2*P_0*P_4*rho_P_0 + P_4*mu_P_0 + P_5
 -M_4 - S_4 + 12931//1000
 -S_4*delta_LM_0 + M_4*mu_M_0 + M_5
 E_4*S_0*mu_LE_0 + 4*E_3*S_1*mu_LE_0 + 6*E_2*S_2*mu_LE_0 + 4*E_1*S_3*mu_LE_0 + E_0*S_4*mu_LE_0 + 6*S_2^2*mu_LL_0 + 8*S_1*S_3*mu_LL_0 + 2*S_0*S_4*mu_LL_0 - S_4*delta_EL_0 + S_4*delta_LM_0 + S_5
 -P_5 - 24943//1000
 E_5*P_0*mu_PE_0 + 5*E_4*P_1*mu_PE_0 + 10*E_3*P_2*mu_PE_0 + 10*E_2*P_3*mu_PE_0 + 5*E_1*P_4*mu_PE_0 + E_0*P_5*mu_PE_0 + P_5*S_0*mu_PL_0 + 5*P_4*S_1*mu_PL_0 + 10*P_3*S_2*mu_PL_0 + 10*P_2*S_3*mu_PL_0 + 5*P_1*S_4*mu_PL_0 + P_0*S_5*mu_PL_0 - 20*P_2*P_3*rho_P_0 - 10*P_1*P_4*rho_P_0 - 2*P_0*P_5*rho_P_0 + P_5*mu_P_0 + P_6
 6*E_2^2*mu_EE_0^2 + 8*E_1*E_3*mu_EE_0^2 + 2*E_0*E_4*mu_EE_0^2 - E_4*P_0*rho_E_0^2 - 4*E_3*P_1*rho_E_0^2 - 6*E_2*P_2*rho_E_0^2 - 4*E_1*P_3*rho_E_0^2 - E_0*P_4*rho_E_0^2 - N_4*P_0*delta_NE_0 - 4*N_3*P_1*delta_NE_0 - 6*N_2*P_2*delta_NE_0 - 4*N_1*P_3*delta_NE_0 - N_0*P_4*delta_NE_0 + E_4*delta_EL_0 + E_5
 N_3*P_0*delta_NE_0^2 + 3*N_2*P_1*delta_NE_0^2 + 3*N_1*P_2*delta_NE_0^2 + N_0*P_3*delta_NE_0^2 + N_3*mu_N_0^2 + N_4

julia> @time rur, sep = zdim_parameterization(sys, get_separating_element=true);

       # Find solutions
primes of bitsize 28
G-Q-Pt-FG-LT-LP(U)
G-Q-Pt-FG-LT-LP(U)
G-Q-Pt-FG-LT-LP(U)
G-Q-Pt-FG-LT-LP(U)
G-Q-Pt-FG-LT-LP(U)
G-Q-Pt-FG-LT-LP(U)
G-Q-Pt-FG-LT-LP(U)
G-Q-Pt-FG-LT-LP(U)
G-Q-Pt-FG-LT-LP(U)
G-Q-Pt-FG-LT-LP(U)
G-Q-Pt-FG-LT-LP(U)
G-Q-Pt-FG-LT-LP(U)
G-Q-Pt-FG-LT-LP(U)
G-Q-Pt-FG-LT-LP(U)
G-Q-Pt-FG-LT-LP(U)
G-Q-Pt-FG-LT-LP(U)
G-Q-Pt-FG-LT-LP(U)
G-Q-Pt-FG-LT-LP(U)
G-Q-Pt-FG-LT-LP(U)
G-Q-Pt-FG-LT-LP(U)
G-Q-Pt-FG-LT-LP(U)
G-Q-Pt-FG-LT-LP(U)
G-Q-Pt-FG-LT-LP(U)
G-Q-Pt-FG-LT-LP(U)
G-Q-Pt-FG-LT-LP(U)
G-Q-Pt-FG-LT-LP(U)
G-Q-Pt-FG-LT-LP(U)
G-Q-Pt-FG-LT-LP(U)
G-Q-Pt-FG-LT-LP(U)
G-Q-Pt-FG-LT-LP(U)
G-Q-Pt-FG-LT-LP(U)
G-Q-Pt-FG-LT-LP(U)
G-Q-Pt-FG-LT-LP(U)
G-Q-Pt-FG-LT-LP(U)
G-Q-Pt-FG-LT-LP(U)
G-Q-Pt-FG-LT-LP(U)
G-Q-Pt-FG-LT-LP(U)
G-Q-Pt-FG-LT-LP(U)
G-Q-Pt-FG-LT-LP(U)
G-Q-Pt-FG-LT-LP(U)
G-Q-Pt-FG-LT-LP(U)
G-Q-Pt-FG-LT-LP(U)
G-Q-Pt-FG-LT-LP(U)
G-Q-Pt-FG-LT-LP(U)
 (34,41)G-Q-Pt-FG-LT-LP(U)
 (38,34)G-Q-Pt-FG-LT-LP(C)
Dimension of the quotient :512
Degree of the radical :512
Use non trivial separating element
Run Groebner learn
Test cyclic optimizationBad prime number for parameterization (512,257)
Switch off cyclic optimization 
Multi-modular computation (1 threads): G-Q-Pt-FG-LT-LP(C)
5-9-13-17-21-25-29-33-37-41-45-49-53-61-69-77-85-93-105-117-129-141-157-173-193-213-237-261-289-317-349-385-425-469-517-569-625-689-757-833-917-1009-1109-1221-1345-1481-1629-1793-1973-2173-2393-2633-2897-3189-
check-G-Q-Pt-FG-LT-LP(C)
Nb Primes used :3189
609.302472 seconds (463.65 M allocations: 211.578 GiB, 11.59% gc time, 0.17% compilation time)

julia> @time sol = RS.rs_isolate(rur, sep, output_precision=Int32(20));
114.698843 seconds (361.38 k allocations: 667.148 MiB, 0.16% gc time)

julia> sol_i = filter(x -> abs(x[end][1] - 1.2) < 0.01, sol)
Vector{Vector{BigFloat}}[]

julia> sol_i = filter(x -> abs(x[end][1] - 1.2) < 0.1, sol)
8-element Vector{Vector{Vector{BigFloat}}}:
 [[0.61899948, 0.61900043], [-0.6970005, -0.69699955], [0.78399944, 0.7840004], [-0.47000027, -0.46999979], [-3.670929, -3.6709251], [37.345215, 37.345276], [0.81493759, 0.81493855], [-0.42402267, -0.4240222], [-0.14414048, -0.14414024], [1.6688404, 1.6688423]  …  [1.2721424, 1.2721443], [1.0892315, 1.0892334], [1.1012383, 1.1012402], [1.1399078, 1.1399097], [1.0005722, 1.0005741], [0.46667671, 0.46667719], [0.95726871, 0.95726967], [0.99817657, 0.99817753], [0.85691929, 0.85692024], [1.1730289, 1.1730309]]
 [[0.61899948, 0.61900043], [-0.6970005, -0.69699955], [0.78399944, 0.7840004], [-0.47000027, -0.46999979], [-3.670929, -3.6709251], [37.345215, 37.345276], [0.81493759, 0.81493855], [-0.42402267, -0.4240222], [-0.14414048, -0.14414024], [1.6688404, 1.6688423]  …  [1.2721424, 1.2721443], [1.0892315, 1.0892334], [1.1012383, 1.1012402], [1.1399078, 1.1399097], [1.0005722, 1.0005741], [0.46667671, 0.46667719], [0.95726871, 0.95726967], [0.99817657, 0.99817753], [-0.85692024, -0.85691929], [1.1730289, 1.1730309]]
 [[0.61899948, 0.61900043], [-0.6970005, -0.69699955], [0.78399944, 0.7840004], [-0.47000027, -0.46999979], [-3.670929, -3.6709251], [37.345215, 37.345276], [0.81493759, 0.81493855], [-0.42402267, -0.4240222], [-0.14414048, -0.14414024], [1.6688404, 1.6688423]  …  [1.2721424, 1.2721443], [1.0892315, 1.0892334], [1.1012383, 1.1012402], [1.1399078, 1.1399097], [-1.0005741, -1.0005722], [0.46667671, 0.46667719], [0.95726871, 0.95726967], [0.99817657, 0.99817753], [0.85691929, 0.85692024], [1.1730289, 1.1730309]]
 [[0.61899948, 0.61900043], [-0.6970005, -0.69699955], [0.78399944, 0.7840004], [-0.47000027, -0.46999979], [-3.670929, -3.6709251], [37.345215, 37.345276], [0.81493759, 0.81493855], [-0.42402267, -0.4240222], [-0.14414048, -0.14414024], [1.6688404, 1.6688423]  …  [-1.2721443, -1.2721424], [1.0892315, 1.0892334], [1.1012383, 1.1012402], [1.1399078, 1.1399097], [1.0005722, 1.0005741], [0.46667671, 0.46667719], [0.95726871, 0.95726967], [0.99817657, 0.99817753], [0.85691929, 0.85692024], [1.1730289, 1.1730309]]
 [[0.61899948, 0.61900043], [-0.6970005, -0.69699955], [0.78399944, 0.7840004], [-0.47000027, -0.46999979], [-3.670929, -3.6709251], [37.345215, 37.345276], [0.81493759, 0.81493855], [-0.42402267, -0.4240222], [-0.14414048, -0.14414024], [1.6688404, 1.6688423]  …  [1.2721424, 1.2721443], [1.0892315, 1.0892334], [1.1012383, 1.1012402], [1.1399078, 1.1399097], [-1.0005741, -1.0005722], [0.46667671, 0.46667719], [0.95726871, 0.95726967], [0.99817657, 0.99817753], [-0.85692024, -0.85691929], [1.1730289, 1.1730309]]
 [[0.61899948, 0.61900043], [-0.6970005, -0.69699955], [0.78399944, 0.7840004], [-0.47000027, -0.46999979], [-3.670929, -3.6709251], [37.345215, 37.345276], [0.81493759, 0.81493855], [-0.42402267, -0.4240222], [-0.14414048, -0.14414024], [1.6688404, 1.6688423]  …  [-1.2721443, -1.2721424], [1.0892315, 1.0892334], [1.1012383, 1.1012402], [1.1399078, 1.1399097], [1.0005722, 1.0005741], [0.46667671, 0.46667719], [0.95726871, 0.95726967], [0.99817657, 0.99817753], [-0.85692024, -0.85691929], [1.1730289, 1.1730309]]
 [[0.61899948, 0.61900043], [-0.6970005, -0.69699955], [0.78399944, 0.7840004], [-0.47000027, -0.46999979], [-3.670929, -3.6709251], [37.345215, 37.345276], [0.81493759, 0.81493855], [-0.42402267, -0.4240222], [-0.14414048, -0.14414024], [1.6688404, 1.6688423]  …  [-1.2721443, -1.2721424], [1.0892315, 1.0892334], [1.1012383, 1.1012402], [1.1399078, 1.1399097], [-1.0005741, -1.0005722], [0.46667671, 0.46667719], [0.95726871, 0.95726967], [0.99817657, 0.99817753], [0.85691929, 0.85692024], [1.1730289, 1.1730309]]
 [[0.61899948, 0.61900043], [-0.6970005, -0.69699955], [0.78399944, 0.7840004], [-0.47000027, -0.46999979], [-3.670929, -3.6709251], [37.345215, 37.345276], [0.81493759, 0.81493855], [-0.42402267, -0.4240222], [-0.14414048, -0.14414024], [1.6688404, 1.6688423]  …  [-1.2721443, -1.2721424], [1.0892315, 1.0892334], [1.1012383, 1.1012402], [1.1399078, 1.1399097], [-1.0005741, -1.0005722], [0.46667671, 0.46667719], [0.95726871, 0.95726967], [0.99817657, 0.99817753], [-0.85692024, -0.85691929], [1.1730289, 1.1730309]]

julia> sol_i = filter(x -> abs(x[end][1] - 1.2) < 0.04, sol)
8-element Vector{Vector{Vector{BigFloat}}}:
 [[0.61899948, 0.61900043], [-0.6970005, -0.69699955], [0.78399944, 0.7840004], [-0.47000027, -0.46999979], [-3.670929, -3.6709251], [37.345215, 37.345276], [0.81493759, 0.81493855], [-0.42402267, -0.4240222], [-0.14414048, -0.14414024], [1.6688404, 1.6688423]  …  [1.2721424, 1.2721443], [1.0892315, 1.0892334], [1.1012383, 1.1012402], [1.1399078, 1.1399097], [1.0005722, 1.0005741], [0.46667671, 0.46667719], [0.95726871, 0.95726967], [0.99817657, 0.99817753], [0.85691929, 0.85692024], [1.1730289, 1.1730309]]
 [[0.61899948, 0.61900043], [-0.6970005, -0.69699955], [0.78399944, 0.7840004], [-0.47000027, -0.46999979], [-3.670929, -3.6709251], [37.345215, 37.345276], [0.81493759, 0.81493855], [-0.42402267, -0.4240222], [-0.14414048, -0.14414024], [1.6688404, 1.6688423]  …  [1.2721424, 1.2721443], [1.0892315, 1.0892334], [1.1012383, 1.1012402], [1.1399078, 1.1399097], [1.0005722, 1.0005741], [0.46667671, 0.46667719], [0.95726871, 0.95726967], [0.99817657, 0.99817753], [-0.85692024, -0.85691929], [1.1730289, 1.1730309]]
 [[0.61899948, 0.61900043], [-0.6970005, -0.69699955], [0.78399944, 0.7840004], [-0.47000027, -0.46999979], [-3.670929, -3.6709251], [37.345215, 37.345276], [0.81493759, 0.81493855], [-0.42402267, -0.4240222], [-0.14414048, -0.14414024], [1.6688404, 1.6688423]  …  [1.2721424, 1.2721443], [1.0892315, 1.0892334], [1.1012383, 1.1012402], [1.1399078, 1.1399097], [-1.0005741, -1.0005722], [0.46667671, 0.46667719], [0.95726871, 0.95726967], [0.99817657, 0.99817753], [0.85691929, 0.85692024], [1.1730289, 1.1730309]]
 [[0.61899948, 0.61900043], [-0.6970005, -0.69699955], [0.78399944, 0.7840004], [-0.47000027, -0.46999979], [-3.670929, -3.6709251], [37.345215, 37.345276], [0.81493759, 0.81493855], [-0.42402267, -0.4240222], [-0.14414048, -0.14414024], [1.6688404, 1.6688423]  …  [-1.2721443, -1.2721424], [1.0892315, 1.0892334], [1.1012383, 1.1012402], [1.1399078, 1.1399097], [1.0005722, 1.0005741], [0.46667671, 0.46667719], [0.95726871, 0.95726967], [0.99817657, 0.99817753], [0.85691929, 0.85692024], [1.1730289, 1.1730309]]
 [[0.61899948, 0.61900043], [-0.6970005, -0.69699955], [0.78399944, 0.7840004], [-0.47000027, -0.46999979], [-3.670929, -3.6709251], [37.345215, 37.345276], [0.81493759, 0.81493855], [-0.42402267, -0.4240222], [-0.14414048, -0.14414024], [1.6688404, 1.6688423]  …  [1.2721424, 1.2721443], [1.0892315, 1.0892334], [1.1012383, 1.1012402], [1.1399078, 1.1399097], [-1.0005741, -1.0005722], [0.46667671, 0.46667719], [0.95726871, 0.95726967], [0.99817657, 0.99817753], [-0.85692024, -0.85691929], [1.1730289, 1.1730309]]
 [[0.61899948, 0.61900043], [-0.6970005, -0.69699955], [0.78399944, 0.7840004], [-0.47000027, -0.46999979], [-3.670929, -3.6709251], [37.345215, 37.345276], [0.81493759, 0.81493855], [-0.42402267, -0.4240222], [-0.14414048, -0.14414024], [1.6688404, 1.6688423]  …  [-1.2721443, -1.2721424], [1.0892315, 1.0892334], [1.1012383, 1.1012402], [1.1399078, 1.1399097], [1.0005722, 1.0005741], [0.46667671, 0.46667719], [0.95726871, 0.95726967], [0.99817657, 0.99817753], [-0.85692024, -0.85691929], [1.1730289, 1.1730309]]
 [[0.61899948, 0.61900043], [-0.6970005, -0.69699955], [0.78399944, 0.7840004], [-0.47000027, -0.46999979], [-3.670929, -3.6709251], [37.345215, 37.345276], [0.81493759, 0.81493855], [-0.42402267, -0.4240222], [-0.14414048, -0.14414024], [1.6688404, 1.6688423]  …  [-1.2721443, -1.2721424], [1.0892315, 1.0892334], [1.1012383, 1.1012402], [1.1399078, 1.1399097], [-1.0005741, -1.0005722], [0.46667671, 0.46667719], [0.95726871, 0.95726967], [0.99817657, 0.99817753], [0.85691929, 0.85692024], [1.1730289, 1.1730309]]
 [[0.61899948, 0.61900043], [-0.6970005, -0.69699955], [0.78399944, 0.7840004], [-0.47000027, -0.46999979], [-3.670929, -3.6709251], [37.345215, 37.345276], [0.81493759, 0.81493855], [-0.42402267, -0.4240222], [-0.14414048, -0.14414024], [1.6688404, 1.6688423]  …  [-1.2721443, -1.2721424], [1.0892315, 1.0892334], [1.1012383, 1.1012402], [1.1399078, 1.1399097], [-1.0005741, -1.0005722], [0.46667671, 0.46667719], [0.95726871, 0.95726967], [0.99817657, 0.99817753], [-0.85692024, -0.85691929], [1.1730289, 1.1730309]]

julia> sol_i = filter(x -> abs(x[end][1] - 1.2) < 0.05, sol)
8-element Vector{Vector{Vector{BigFloat}}}:
 [[0.61899948, 0.61900043], [-0.6970005, -0.69699955], [0.78399944, 0.7840004], [-0.47000027, -0.46999979], [-3.670929, -3.6709251], [37.345215, 37.345276], [0.81493759, 0.81493855], [-0.42402267, -0.4240222], [-0.14414048, -0.14414024], [1.6688404, 1.6688423]  …  [1.2721424, 1.2721443], [1.0892315, 1.0892334], [1.1012383, 1.1012402], [1.1399078, 1.1399097], [1.0005722, 1.0005741], [0.46667671, 0.46667719], [0.95726871, 0.95726967], [0.99817657, 0.99817753], [0.85691929, 0.85692024], [1.1730289, 1.1730309]]
 [[0.61899948, 0.61900043], [-0.6970005, -0.69699955], [0.78399944, 0.7840004], [-0.47000027, -0.46999979], [-3.670929, -3.6709251], [37.345215, 37.345276], [0.81493759, 0.81493855], [-0.42402267, -0.4240222], [-0.14414048, -0.14414024], [1.6688404, 1.6688423]  …  [1.2721424, 1.2721443], [1.0892315, 1.0892334], [1.1012383, 1.1012402], [1.1399078, 1.1399097], [1.0005722, 1.0005741], [0.46667671, 0.46667719], [0.95726871, 0.95726967], [0.99817657, 0.99817753], [-0.85692024, -0.85691929], [1.1730289, 1.1730309]]
 [[0.61899948, 0.61900043], [-0.6970005, -0.69699955], [0.78399944, 0.7840004], [-0.47000027, -0.46999979], [-3.670929, -3.6709251], [37.345215, 37.345276], [0.81493759, 0.81493855], [-0.42402267, -0.4240222], [-0.14414048, -0.14414024], [1.6688404, 1.6688423]  …  [1.2721424, 1.2721443], [1.0892315, 1.0892334], [1.1012383, 1.1012402], [1.1399078, 1.1399097], [-1.0005741, -1.0005722], [0.46667671, 0.46667719], [0.95726871, 0.95726967], [0.99817657, 0.99817753], [0.85691929, 0.85692024], [1.1730289, 1.1730309]]
 [[0.61899948, 0.61900043], [-0.6970005, -0.69699955], [0.78399944, 0.7840004], [-0.47000027, -0.46999979], [-3.670929, -3.6709251], [37.345215, 37.345276], [0.81493759, 0.81493855], [-0.42402267, -0.4240222], [-0.14414048, -0.14414024], [1.6688404, 1.6688423]  …  [-1.2721443, -1.2721424], [1.0892315, 1.0892334], [1.1012383, 1.1012402], [1.1399078, 1.1399097], [1.0005722, 1.0005741], [0.46667671, 0.46667719], [0.95726871, 0.95726967], [0.99817657, 0.99817753], [0.85691929, 0.85692024], [1.1730289, 1.1730309]]
 [[0.61899948, 0.61900043], [-0.6970005, -0.69699955], [0.78399944, 0.7840004], [-0.47000027, -0.46999979], [-3.670929, -3.6709251], [37.345215, 37.345276], [0.81493759, 0.81493855], [-0.42402267, -0.4240222], [-0.14414048, -0.14414024], [1.6688404, 1.6688423]  …  [1.2721424, 1.2721443], [1.0892315, 1.0892334], [1.1012383, 1.1012402], [1.1399078, 1.1399097], [-1.0005741, -1.0005722], [0.46667671, 0.46667719], [0.95726871, 0.95726967], [0.99817657, 0.99817753], [-0.85692024, -0.85691929], [1.1730289, 1.1730309]]
 [[0.61899948, 0.61900043], [-0.6970005, -0.69699955], [0.78399944, 0.7840004], [-0.47000027, -0.46999979], [-3.670929, -3.6709251], [37.345215, 37.345276], [0.81493759, 0.81493855], [-0.42402267, -0.4240222], [-0.14414048, -0.14414024], [1.6688404, 1.6688423]  …  [-1.2721443, -1.2721424], [1.0892315, 1.0892334], [1.1012383, 1.1012402], [1.1399078, 1.1399097], [1.0005722, 1.0005741], [0.46667671, 0.46667719], [0.95726871, 0.95726967], [0.99817657, 0.99817753], [-0.85692024, -0.85691929], [1.1730289, 1.1730309]]
 [[0.61899948, 0.61900043], [-0.6970005, -0.69699955], [0.78399944, 0.7840004], [-0.47000027, -0.46999979], [-3.670929, -3.6709251], [37.345215, 37.345276], [0.81493759, 0.81493855], [-0.42402267, -0.4240222], [-0.14414048, -0.14414024], [1.6688404, 1.6688423]  …  [-1.2721443, -1.2721424], [1.0892315, 1.0892334], [1.1012383, 1.1012402], [1.1399078, 1.1399097], [-1.0005741, -1.0005722], [0.46667671, 0.46667719], [0.95726871, 0.95726967], [0.99817657, 0.99817753], [0.85691929, 0.85692024], [1.1730289, 1.1730309]]
 [[0.61899948, 0.61900043], [-0.6970005, -0.69699955], [0.78399944, 0.7840004], [-0.47000027, -0.46999979], [-3.670929, -3.6709251], [37.345215, 37.345276], [0.81493759, 0.81493855], [-0.42402267, -0.4240222], [-0.14414048, -0.14414024], [1.6688404, 1.6688423]  …  [-1.2721443, -1.2721424], [1.0892315, 1.0892334], [1.1012383, 1.1012402], [1.1399078, 1.1399097], [-1.0005741, -1.0005722], [0.46667671, 0.46667719], [0.95726871, 0.95726967], [0.99817657, 0.99817753], [-0.85692024, -0.85691929], [1.1730289, 1.1730309]]

julia> sol_i[1]
43-element Vector{Vector{BigFloat}}:
 [0.61899948, 0.61900043]
 [-0.6970005, -0.69699955]
 [0.78399944, 0.7840004]
 [-0.47000027, -0.46999979]
 [-3.670929, -3.6709251]
 [37.345215, 37.345276]
 [0.81493759, 0.81493855]
 [-0.42402267, -0.4240222]
 [-0.14414048, -0.14414024]
 [1.6688404, 1.6688423]
 [-6.8231201, -6.8231125]
 [27.966522, 27.966553]
 [0.44999981, 0.45000029]
 [-0.71900082, -0.71899986]
 [1.4329987, 1.4330006]
 [-3.5443916, -3.5443878]
 [10.736816, 10.736832]
 [0.59799957, 0.59800053]
 [-0.63300037, -0.63299942]
 [0.77199936, 0.77200031]
 [-1.5530014, -1.5529995]
 [5.487999, 5.4880066]
 [-24.943024, -24.942993]
 [129.51904, 129.51929]
 [0.49406147, 0.49406195]
 [-0.61397743, -0.61397648]
 [1.4721394, 1.4721413]
 [-4.8148422, -4.8148346]
 [19.754089, 19.75412]
 [-97.106323, -97.106201]
 [0.99760532, 0.99760628]
 [1.0220032, 1.0220051]
 [0.99885368, 0.99885464]
 [1.2721424, 1.2721443]
 [1.0892315, 1.0892334]
 [1.1012383, 1.1012402]
 [1.1399078, 1.1399097]
 [1.0005722, 1.0005741]
 [0.46667671, 0.46667719]
 [0.95726871, 0.95726967]
 [0.99817657, 0.99817753]
 [0.85691929, 0.85692024]
 [1.1730289, 1.1730309]

julia> sol_i[2]
43-element Vector{Vector{BigFloat}}:
 [0.61899948, 0.61900043]
 [-0.6970005, -0.69699955]
 [0.78399944, 0.7840004]
 [-0.47000027, -0.46999979]
 [-3.670929, -3.6709251]
 [37.345215, 37.345276]
 [0.81493759, 0.81493855]
 [-0.42402267, -0.4240222]
 [-0.14414048, -0.14414024]
 [1.6688404, 1.6688423]
 [-6.8231201, -6.8231125]
 [27.966522, 27.966553]
 [0.44999981, 0.45000029]
 [-0.71900082, -0.71899986]
 [1.4329987, 1.4330006]
 [-3.5443916, -3.5443878]
 [10.736816, 10.736832]
 [0.59799957, 0.59800053]
 [-0.63300037, -0.63299942]
 [0.77199936, 0.77200031]
 [-1.5530014, -1.5529995]
 [5.487999, 5.4880066]
 [-24.943024, -24.942993]
 [129.51904, 129.51929]
 [0.49406147, 0.49406195]
 [-0.61397743, -0.61397648]
 [1.4721394, 1.4721413]
 [-4.8148422, -4.8148346]
 [19.754089, 19.75412]
 [-97.106323, -97.106201]
 [0.99760532, 0.99760628]
 [1.0220032, 1.0220051]
 [0.99885368, 0.99885464]
 [1.2721424, 1.2721443]
 [1.0892315, 1.0892334]
 [1.1012383, 1.1012402]
 [1.1399078, 1.1399097]
 [1.0005722, 1.0005741]
 [0.46667671, 0.46667719]
 [0.95726871, 0.95726967]
 [0.99817657, 0.99817753]
 [-0.85692024, -0.85691929]
 [1.1730289, 1.1730309]

julia> sol_i[3]
43-element Vector{Vector{BigFloat}}:
 [0.61899948, 0.61900043]
 [-0.6970005, -0.69699955]
 [0.78399944, 0.7840004]
 [-0.47000027, -0.46999979]
 [-3.670929, -3.6709251]
 [37.345215, 37.345276]
 [0.81493759, 0.81493855]
 [-0.42402267, -0.4240222]
 [-0.14414048, -0.14414024]
 [1.6688404, 1.6688423]
 [-6.8231201, -6.8231125]
 [27.966522, 27.966553]
 [0.44999981, 0.45000029]
 [-0.71900082, -0.71899986]
 [1.4329987, 1.4330006]
 [-3.5443916, -3.5443878]
 [10.736816, 10.736832]
 [0.59799957, 0.59800053]
 [-0.63300037, -0.63299942]
 [0.77199936, 0.77200031]
 [-1.5530014, -1.5529995]
 [5.487999, 5.4880066]
 [-24.943024, -24.942993]
 [129.51904, 129.51929]
 [0.49406147, 0.49406195]
 [-0.61397743, -0.61397648]
 [1.4721394, 1.4721413]
 [-4.8148422, -4.8148346]
 [19.754089, 19.75412]
 [-97.106323, -97.106201]
 [0.99760532, 0.99760628]
 [1.0220032, 1.0220051]
 [0.99885368, 0.99885464]
 [1.2721424, 1.2721443]
 [1.0892315, 1.0892334]
 [1.1012383, 1.1012402]
 [1.1399078, 1.1399097]
 [-1.0005741, -1.0005722]
 [0.46667671, 0.46667719]
 [0.95726871, 0.95726967]
 [0.99817657, 0.99817753]
 [0.85691929, 0.85692024]
 [1.1730289, 1.1730309]

julia> sol_i[1]
43-element Vector{Vector{BigFloat}}:
 [0.61899948, 0.61900043]
 [-0.6970005, -0.69699955]
 [0.78399944, 0.7840004]
 [-0.47000027, -0.46999979]
 [-3.670929, -3.6709251]
 [37.345215, 37.345276]
 [0.81493759, 0.81493855]
 [-0.42402267, -0.4240222]
 [-0.14414048, -0.14414024]
 [1.6688404, 1.6688423]
 [-6.8231201, -6.8231125]
 [27.966522, 27.966553]
 [0.44999981, 0.45000029]
 [-0.71900082, -0.71899986]
 [1.4329987, 1.4330006]
 [-3.5443916, -3.5443878]
 [10.736816, 10.736832]
 [0.59799957, 0.59800053]
 [-0.63300037, -0.63299942]
 [0.77199936, 0.77200031]
 [-1.5530014, -1.5529995]
 [5.487999, 5.4880066]
 [-24.943024, -24.942993]
 [129.51904, 129.51929]
 [0.49406147, 0.49406195]
 [-0.61397743, -0.61397648]
 [1.4721394, 1.4721413]
 [-4.8148422, -4.8148346]
 [19.754089, 19.75412]
 [-97.106323, -97.106201]
 [0.99760532, 0.99760628]
 [1.0220032, 1.0220051]
 [0.99885368, 0.99885464]
 [1.2721424, 1.2721443]
 [1.0892315, 1.0892334]
 [1.1012383, 1.1012402]
 [1.1399078, 1.1399097]
 [1.0005722, 1.0005741]
 [0.46667671, 0.46667719]
 [0.95726871, 0.95726967]
 [0.99817657, 0.99817753]
 [0.85691929, 0.85692024]
 [1.1730289, 1.1730309]

julia> p_true
ERROR: UndefVarError: `p_true` not defined in `Main`
Suggestion: check for spelling errors or missing imports.

julia> p_true = [1, 1.3, 1.1, 1.2, 1.1, 1, 0.5, 1.0, 1.0, 1.0, 1.0, 0.9, 1.2] # True Parameters
13-element Vector{Float64}:
 1.0
 1.3
 1.1
 1.2
 1.1
 1.0
 0.5
 1.0
 1.0
 1.0
 1.0
 0.9
 1.2

julia> (0.5 - 0.46667671) / 0.5
0.06664658000000001

julia> (0.5 - 0.46667671) / 0.5 * 100
6.664658000000001

